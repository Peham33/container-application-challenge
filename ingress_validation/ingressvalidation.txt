ingress validation
1. check if ingress.yaml exists
2. get ingress rule backend api port 
	DEFAULTBACKEND_PORT=$(cat ingress.yaml | yq e '.spec.defaultBackend.service.port.number' -  )
	RULES_PORT=$(cat ingress.yaml | yq e '.spec.rules[0].http.paths[0].backend.service.port.number' -)
	kubectl get ingress -o=jsonpath='{.items[*].spec.defaultBackend.service.port.number}'
	kubectl get ingress -o=jsonpath='{.items[*].spec.rules[*].http.paths[*].backend.service.port.number}'
3. change ingress echo service spec port to backend api port
	if $RULES_PORT = null 
	$PORT = $DEFAULTBACKEND_PORT
	else $PORT = $RULES_PORT
	cat ingress_validation/ingress-echo.service.yaml | yq e '.spec.ports[].port = "$PORT"' - | sudo sponge ingress-echo.service.yaml
4. apply ingress echo
	kubectl apply -f ingress_validation/ingress-echo.deployment.yaml
	kubectl apply -f ingress_validation/ingress-echo.service.yaml
5. change ingress rule backend service name to echoserver
	cat ingress.yaml | yq e '.spec.defaultBackend.service.name = "echoserver"' - | sudo sponge ingress.yaml
	cat ingress.yaml | yq e '.spec.rules[].http.paths[].backend.service.name = "echoserver"' - | sudo sponge ingress.yaml  
6. apply ingress 
	kubectl apply -f ingress.yaml
7. curl http://challenge.test/?echo_body=funktioniert -L
8. returned funktioniert => valid

